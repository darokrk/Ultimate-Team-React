{"version":3,"sources":["Components/Player/Player.js","Components/Overall/Overall.js","Components/Pitch/Pitch.js","Components/Bench/Bench.js","Components/Header/Header.js","Components/PlayerInfo/PlayerInfo.js","App.js","Components/Manager/Manager.js","Components/ManagerPicker/ManagerPicker.js","Components/TeamPicker/TeamPicker.js","Components/Router.js","index.js"],"names":["Player","props","selected","index","player","handleSelectPlayer","playerClass","playerClub","club","react_default","a","createElement","className","src","alt","concat","onClick","number","position","nationality","img","Overall","overallPower","handleFormationChange","formation","teamName","choosedManager","indexManager","style","width","onChange","value","Components_Player_Player","managers","Pitch","players","reduce","total","overall","parseFloat","toFixed","playersOnTheField","map","i","key","name","Fragment","Components_Overall_Overall","Bench","benchPlayers","playersOnBench","Header","PlayerInfo","selectedPlayers","playerInfo","stats","Object","keys","attr","App","state","activePlayer","toConsumableArray","_this","isSelected","includes","filter","length","shift","unshift","setState","pitchUpdate","playerSelected","findIndex","benchSelected","benchPlayer","tempPlayer","filterPlayer","selectedPlayer","forEach","e","target","this","_this$state","_this$props$location","location","teamId","match","params","Components_Header_Header","Components_Pitch_Pitch","Components_Bench_Bench","Components_PlayerInfo_PlayerInfo","Component","Manager","_props$manager","manager","birthDate","desc","handleManagerSelect","ManagerPicker","handleClickPrevious","handleClickNext","managersList","Components_Manager_Manager","TeamPicker","managerName","handleSubmit","preventDefault","alert","history","push","pathname","handleTeamName","teamPicker","_this$state2","onSubmit","type","required","Components_ManagerPicker_ManagerPicker","Router","react_router_dom","react_router","exact","path","component","ReactDOM","render","Components_Router","document","getElementById"],"mappings":"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","file":"static/js/main.aff115c7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Player.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../../data/formations.scss\";\r\n\r\nconst Player = props => {\r\n  const { selected, index, player, handleSelectPlayer } = props;\r\n\r\n  let playerClass = \"player\";\r\n  let playerClub = null;\r\n  if (selected) {\r\n    playerClass = \"player picked\";\r\n  }\r\n  if (player.club) {\r\n    playerClub = <img className=\"info__club\" src={player.club} alt=\"\" />;\r\n  }\r\n  return (\r\n    <div className={`player__wrapper-${index}`}>\r\n      <div\r\n        className={playerClass}\r\n        onClick={() => handleSelectPlayer(player, index)}\r\n      >\r\n        <div className=\"player__info\">\r\n          <span>{player.number}</span>\r\n          <span>\r\n            <strong>{player.position}</strong>\r\n          </span>\r\n          {playerClub}\r\n          <img className=\"info__nationality\" src={player.nationality} alt=\"\" />\r\n        </div>\r\n        <img className=\"player__img\" src={player.img} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPlayer.propTypes = {\r\n  selected: PropTypes.bool,\r\n  index: PropTypes.number,\r\n  player: PropTypes.object,\r\n  handleSelectPlayer: PropTypes.func\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\nimport Player from \"../Player/Player\";\r\nimport PropTypes from \"prop-types\";\r\nimport managers from \"../../data/managers.json\";\r\nimport \"./Overall.scss\";\r\n\r\nconst Overall = props => {\r\n  const {\r\n    overallPower,\r\n    handleFormationChange,\r\n    formation,\r\n    teamName,\r\n    choosedManager,\r\n    indexManager\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"overall__wrapper\">\r\n      <div className=\"overall__name\">{teamName} Team</div>\r\n      <div className=\"overall__power\">\r\n        <span>Rating</span>\r\n        <span>{overallPower}</span>\r\n      </div>\r\n      <div className=\"overall__display\">\r\n        <div\r\n          className=\"display__content\"\r\n          style={{ width: `${overallPower}%` }}\r\n        />\r\n      </div>\r\n      <select\r\n        className=\"overall__formation\"\r\n        onChange={handleFormationChange}\r\n        value={formation}\r\n      >\r\n        <option value=\"1-4-1-3-2\">1-4-1-3-2</option>\r\n        <option value=\"1-4-4-2\">1-4-4-2</option>\r\n        <option value=\"1-4-1-2-1-2\">1-4-1-2-1-2</option>\r\n        <option value=\"1-4-2-3-1\">1-4-2-3-1</option>\r\n        <option value=\"1-4-2-2-2\">1-4-2-2-2</option>\r\n        <option value=\"1-3-3-2-2\">1-3-3-2-2</option>\r\n      </select>\r\n      <div className=\"overall__manager\">\r\n        <span>Manager</span>\r\n        <Player player={managers[indexManager]} />\r\n        <span>{choosedManager}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nOverall.propTypes = {\r\n  overallPower: PropTypes.string,\r\n  handleFormationChange: PropTypes.func,\r\n  formation: PropTypes.string,\r\n  teamName: PropTypes.string,\r\n  choosedManager: PropTypes.string,\r\n  indexManager: PropTypes.number\r\n};\r\n\r\nexport default Overall;\r\n","import React from \"react\";\r\nimport Player from \"../Player/Player\";\r\nimport Overall from \"../Overall/Overall\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Pitch.scss\";\r\n\r\nconst Pitch = props => {\r\n  const {\r\n    players,\r\n    handleSelectPlayer,\r\n    formation,\r\n    handleFormationChange,\r\n    teamName,\r\n    choosedManager,\r\n    indexManager\r\n  } = props;\r\n\r\n  let overallPower = players.reduce(\r\n    (total, player) => total + player.overall,\r\n    0\r\n  );\r\n  overallPower = parseFloat(overallPower / 11).toFixed(2);\r\n\r\n  const playersOnTheField = players.map((player, i) => {\r\n    return (\r\n      <Player\r\n        key={player.name}\r\n        player={player}\r\n        index={i}\r\n        selected={player.selected}\r\n        handleSelectPlayer={handleSelectPlayer}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"pitch\">\r\n        <div className={`field__wrapper field__wrapper-${formation}`}>\r\n          {playersOnTheField}\r\n        </div>\r\n      </div>\r\n      <Overall\r\n        handleFormationChange={handleFormationChange}\r\n        formation={formation}\r\n        overallPower={overallPower}\r\n        teamName={teamName}\r\n        choosedManager={choosedManager}\r\n        indexManager={indexManager}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nPitch.propTypes = {\r\n  players: PropTypes.array.isRequired,\r\n  handleSelectPlayer: PropTypes.func,\r\n  handleFormationChange: PropTypes.func,\r\n  formation: PropTypes.string,\r\n  teamName: PropTypes.string,\r\n  choosedManager: PropTypes.string,\r\n  indexManager: PropTypes.number\r\n};\r\n\r\nexport default Pitch;\r\n","import React from \"react\";\r\nimport Player from \"../Player/Player\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Bench.scss\";\r\n\r\nconst Bench = props => {\r\n  const { benchPlayers, handleSelectPlayer } = props;\r\n\r\n  const playersOnBench = benchPlayers.map((player, i) => {\r\n    return (\r\n      <Player\r\n        key={player.name}\r\n        player={player}\r\n        index={i}\r\n        handleSelectPlayer={handleSelectPlayer}\r\n        selected={player.selected}\r\n      />\r\n    );\r\n  });\r\n  return <div className=\"bench\">{playersOnBench}</div>;\r\n};\r\n\r\nBench.propTypes = {\r\n  benchPlayers: PropTypes.array,\r\n  handleSelectPlayer: PropTypes.func\r\n};\r\n\r\nexport default Bench;\r\n","import React from \"react\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header = () => {\r\n  return <h1 className=\"header\">Ultimate Team App</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Player from \"../Player/Player\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./PlayerInfo.scss\";\r\n\r\nconst PlayerInfo = props => {\r\n  const { selectedPlayers } = props;\r\n\r\n  let playerInfo = null;\r\n\r\n  if (selectedPlayers[0]) {\r\n    let stats = selectedPlayers[0].stats;\r\n    stats = Object.keys(stats).map((attr, i) => (\r\n      <div className=\"stats__wrapper\" key={i}>\r\n        <div className=\"stats__attr\">{attr}</div>\r\n        <div className=\"stats__value\">{stats[attr]}</div>\r\n      </div>\r\n    ));\r\n    playerInfo = (\r\n      <div className=\"playercard__info\">\r\n        <div className=\"playercard__picture\">\r\n          <Player player={selectedPlayers[0]} />\r\n          <span className=\"playercard__name\">{selectedPlayers[0].name}</span>\r\n        </div>\r\n        <div className=\"playercard__stats\">{stats}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <>{playerInfo}</>;\r\n};\r\n\r\nPlayerInfo.propTypes = {\r\n  selectedPlayers: PropTypes.array\r\n};\r\n\r\nexport default PlayerInfo;\r\n","import React, { Component } from \"react\";\r\nimport Pitch from \"./Components/Pitch/Pitch\";\r\nimport Bench from \"./Components/Bench/Bench\";\r\nimport Header from \"./Components/Header/Header\";\r\nimport PlayerInfo from \"./Components/PlayerInfo/PlayerInfo\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./App.scss\";\r\nimport players from \"./data/players.json\";\r\nimport benchPlayers from \"./data/benchPlayers.json\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    players: players,\r\n    benchPlayers: benchPlayers,\r\n    selectedPlayers: [],\r\n    formation: \"1-4-1-3-2\"\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object,\r\n    location: PropTypes.shape({\r\n      indexManager: PropTypes.number,\r\n      choosedManager: PropTypes.string\r\n    })\r\n  };\r\n\r\n  handleSelectPlayer = (activePlayer, index) => {\r\n    const players = [...this.state.players];\r\n    const benchPlayers = [...this.state.benchPlayers];\r\n    let selectedPlayers = [...this.state.selectedPlayers];\r\n\r\n    let isSelected = activePlayer.selected;\r\n\r\n    if (players.includes(activePlayer)) {\r\n      players[index].selected = !isSelected;\r\n    } else benchPlayers[index].selected = !isSelected;\r\n\r\n    if (!activePlayer.selected) {\r\n      selectedPlayers = selectedPlayers.filter(\r\n        player => player.selected !== false\r\n      );\r\n    }\r\n\r\n    if (selectedPlayers.length >= 2) {\r\n      selectedPlayers.shift();\r\n    }\r\n\r\n    if (activePlayer.selected) {\r\n      selectedPlayers.unshift(activePlayer);\r\n    }\r\n\r\n    this.setState({ players, benchPlayers, selectedPlayers });\r\n  };\r\n\r\n  pitchUpdate = () => {\r\n    let players = [...this.state.players];\r\n    const benchPlayers = [...this.state.benchPlayers];\r\n\r\n    const playerSelected = players.findIndex(player => player.selected);\r\n    const benchSelected = benchPlayers.findIndex(\r\n      benchPlayer => benchPlayer.selected\r\n    );\r\n\r\n    if (playerSelected !== -1 && benchSelected !== -1) {\r\n      const tempPlayer = players[playerSelected];\r\n      players[playerSelected] = benchPlayers[benchSelected];\r\n      benchPlayers[benchSelected] = tempPlayer;\r\n    } else if (playerSelected !== -1 && benchSelected === -1) {\r\n      const selectedPlayers = [...this.state.selectedPlayers];\r\n\r\n      players = players.map(player => {\r\n        if (player.selected) {\r\n          const filterPlayer = selectedPlayers.filter(\r\n            selectedPlayer => selectedPlayer.name !== player.name\r\n          );\r\n          player = filterPlayer[0];\r\n        }\r\n        return player;\r\n      });\r\n    }\r\n\r\n    players.forEach(player => {\r\n      player.selected = false;\r\n    });\r\n    benchPlayers.forEach(benchPlayer => {\r\n      benchPlayer.selected = false;\r\n    });\r\n\r\n    this.setState({ players, benchPlayers, selectedPlayers: [] });\r\n  };\r\n\r\n  handleFormationChange = e => {\r\n    this.setState({\r\n      formation: e.target.value\r\n    });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.selectedPlayers.length >= 2) {\r\n      this.pitchUpdate();\r\n    } else return;\r\n  }\r\n\r\n  render() {\r\n    const { players, selectedPlayers, formation, benchPlayers } = this.state;\r\n    const { choosedManager, indexManager } = this.props.location;\r\n    const { teamId } = this.props.match.params;\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          <Pitch\r\n            players={players}\r\n            handleSelectPlayer={this.handleSelectPlayer}\r\n            selectedPlayers={selectedPlayers}\r\n            handleFormationChange={this.handleFormationChange}\r\n            formation={formation}\r\n            teamName={teamId}\r\n            choosedManager={choosedManager}\r\n            indexManager={indexManager}\r\n          />\r\n          <Bench\r\n            benchPlayers={benchPlayers}\r\n            handleSelectPlayer={this.handleSelectPlayer}\r\n            selectedPlayers={selectedPlayers}\r\n          />\r\n          <PlayerInfo selectedPlayers={selectedPlayers} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Manager.scss\";\r\n\r\nconst Manager = props => {\r\n  const { img, nationality, name, birthDate, desc } = props.manager;\r\n  return (\r\n    <div className=\"manager\" onClick={props.handleManagerSelect}>\r\n      <img className=\"manager__img\" src={img} alt=\"\" />\r\n      <div className=\"manager__info\">\r\n        <img className=\"manager__flag\" src={nationality} alt=\"\" />\r\n        <strong className=\"manager__name\">{name}</strong>\r\n        <span>{birthDate}</span>\r\n      </div>\r\n      <div className=\"manager__desc\">{desc}</div>\r\n      <div />\r\n    </div>\r\n  );\r\n};\r\n\r\nManager.propTypes = {\r\n  manager: PropTypes.shape({\r\n    img: PropTypes.string,\r\n    nationality: PropTypes.string,\r\n    name: PropTypes.string,\r\n    birthDate: PropTypes.string,\r\n    desc: PropTypes.string\r\n  })\r\n};\r\n\r\nexport default Manager;\r\n","import React from \"react\";\r\nimport Manager from \"../Manager/Manager\";\r\nimport PropTypes from \"prop-types\";\r\nimport managers from \"../../data/managers.json\";\r\n\r\nconst ManagerPicker = props => {\r\n  const {\r\n    handleManagerSelect,\r\n    indexManager,\r\n    handleClickPrevious,\r\n    handleClickNext\r\n  } = props;\r\n  const managersList = managers.map(manager => (\r\n    <Manager\r\n      handleManagerSelect={() => handleManagerSelect(manager.name)}\r\n      key={manager.name}\r\n      manager={manager}\r\n    />\r\n  ));\r\n  return (\r\n    <div className=\"picker__wrapper\">\r\n      <div className=\"picker__header\">\r\n        <h1>Welcome to the Ultimate Team App</h1>\r\n        <span>Please select your team manager:</span>\r\n      </div>\r\n      <div className=\"managers__wrapper\">{managersList[indexManager]}</div>\r\n      <div className=\"managers__buttons\">\r\n        <button className=\"button\" onClick={handleClickPrevious}>\r\n          Previous\r\n        </button>\r\n        <button className=\"button\" onClick={handleClickNext}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nManagerPicker.propTypes = {\r\n  handleManagerSelect: PropTypes.func,\r\n  handleClickPrevious: PropTypes.func,\r\n  handleClickNext: PropTypes.func,\r\n  indexManager: PropTypes.number\r\n};\r\n\r\nexport default ManagerPicker;\r\n","import React, { Component } from \"react\";\r\nimport ManagerPicker from \"../ManagerPicker/ManagerPicker\";\r\nimport \"./TeamPicker.scss\";\r\n\r\nclass TeamPicker extends Component {\r\n  state = {\r\n    index: 0,\r\n    choosedManager: false,\r\n    teamName: \"\"\r\n  };\r\n\r\n  handleClickNext = () => {\r\n    const { index } = this.state;\r\n    this.setState({\r\n      index: index + 1\r\n    });\r\n  };\r\n\r\n  handleClickPrevious = () => {\r\n    const { index } = this.state;\r\n    this.setState({\r\n      index: index - 1\r\n    });\r\n  };\r\n\r\n  handleManagerSelect = managerName => {\r\n    this.setState({\r\n      choosedManager: managerName\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { teamName, choosedManager, index } = this.state;\r\n    e.preventDefault();\r\n    if (teamName.length <= 2) {\r\n      alert(\"Team name must have more than 2 letters\");\r\n      return;\r\n    }\r\n    this.props.history.push({\r\n      pathname: `/team/${teamName}`,\r\n      choosedManager: choosedManager,\r\n      indexManager: index\r\n    });\r\n  };\r\n\r\n  handleTeamName = e => {\r\n    const teamName = e.target.value;\r\n    this.setState({ teamName });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    const { index } = this.state;\r\n    if (index > 5) {\r\n      this.setState({\r\n        index: 0\r\n      });\r\n    } else if (index < 0) {\r\n      this.setState({\r\n        index: 5\r\n      });\r\n    } else return;\r\n  }\r\n\r\n  render() {\r\n    const { teamName, choosedManager, index } = this.state;\r\n    let teamPicker;\r\n    if (choosedManager) {\r\n      teamPicker = (\r\n        <div className=\"picker__wrapper\">\r\n          <div className=\"picker__header\">\r\n            <h1>Welcome to the Ultimate Team App</h1>\r\n            <form className=\"picker__form\" onSubmit={this.handleSubmit}>\r\n              <label>Please insert your team name:</label>\r\n              <input\r\n                className=\"form__input\"\r\n                type=\"text\"\r\n                value={teamName}\r\n                onChange={this.handleTeamName}\r\n                required\r\n              />\r\n              <button className=\"button\">Submit</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else\r\n      teamPicker = (\r\n        <ManagerPicker\r\n          indexManager={index}\r\n          handleManagerSelect={this.handleManagerSelect}\r\n          handleClickPrevious={this.handleClickPrevious}\r\n          handleClickNext={this.handleClickNext}\r\n        />\r\n      );\r\n    return <>{teamPicker}</>;\r\n  }\r\n}\r\n\r\nexport default TeamPicker;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport App from \"../App\";\r\nimport TeamPicker from \"./TeamPicker/TeamPicker\";\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={TeamPicker} />\r\n      <Route path=\"/team/:teamId\" component={App} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport Router from \"./Components/Router\";\r\n\r\nReactDOM.render(<Router />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}